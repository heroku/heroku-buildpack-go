#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir>

set -eo pipefail

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
ver=1.0.2
file=go$ver.linux-amd64.tar.gz
url=http://go.googlecode.com/files/$file
buildpack=$(dirname $(dirname $0))

# Python
venv=$cache/venv
mkdir -p $cache/pip
python=python2.7
PATH=$venv/bin:$PATH

virtualenv() {
    python "$buildpack/vendor/virtualenv-1.7/virtualenv.py" "$@"
}

if ! test -f $build/.godir
then
    echo >&2 " !     A .godir is required."
    echo >&2 " !     See https://gist.github.com/299535bbf56bf3016cba for instructions."
    exit 1
fi

if test -e $build/bin && ! test -d $build/bin
then
    echo >&2 " !     File bin exists and is not a directory."
    exit 1
fi

if test -d $cache/go-$ver/go
then
    echo "-----> Using Go $ver"
else
    rm -rf $cache/* # be sure not to build up cruft
    mkdir -p $cache/go-$ver
    cd $cache/go-$ver
    echo -n "-----> Installing Go $ver..."
    curl -sO $url
    tar zxf $file
    rm -f $file
    echo " done"
fi

GOROOT=$cache/go-$ver/go export GOROOT
GOPATH=$build/.heroku/g export GOPATH
PATH=$GOROOT/bin:$PATH


if ! (which hg > /dev/null && which bzr > /dev/null)
then
    echo -n "       Installing Virtualenv..."
    virtualenv --python $python --distribute --never-download --prompt='(venv) ' $venv > /dev/null 2>&1
    . $venv/bin/activate > /dev/null 2>&1
    echo " done"

    echo -n "       Installing Mercurial..."
    pip install --use-mirrors mercurial > /dev/null 2>&1
    echo " done"

    echo -n "       Installing Bazaar..."
    pip install --use-mirrors bzr > /dev/null 2>&1
    echo " done"
fi

name=$(cat $build/.godir)
p=$GOPATH/src/$name
mkdir -p $p
cp -R $build/* $p

unset GIT_DIR # unset git dir or it will mess with goinstall
echo "-----> Running: go get ./..."
cd $p
go get ./... | sed -u 's/^/       /'

mkdir -p $build/bin
mv $GOPATH/bin/* $build/bin
rm -rf $build/.heroku
