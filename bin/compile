#!/bin/sh
# usage: bin/compile <BUILD-dir> <CACHE_DIR-dir>

# fail fast
set -e
unset GIT_DIR # unset git dir or it will mess with goinstall

# Heroku
BUILDPACK_BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
BUILDPACK_DIR=$(dirname $BUILDPACK_BIN_DIR)
mkdir -p "$1" "$2"
REPO_DIR=$(cd "$1/" && pwd)
CACHE_DIR=$(cd "$2/" && pwd)

# Python
VENV_LOC=$CACHE_DIR/venv
PIP_DOWNLOAD_CACHE=$CACHE_DIR/pip export PIP_DOWNLOAD_CACHE
PYTHON_VERSION="2.7.2"
PYTHON_EXE="python2.7"
mkdir -p $PIP_DOWNLOAD_CACHE
PATH=$VENV_LOC/bin:$PATH export PATH

# Go
GOVER=go1
GOTOOLCHAIN=go.$GOVER.linux-amd64.tar.gz
GOURL=http://go.googlecode.com/files/$GOTOOLCHAIN
GOROOT=$CACHE_DIR/go-$GOVER/go export GOROOT
GOPATH=$CACHE_DIR/dependencies export GOPATH
PATH=$GOROOT/bin:$PATH export PATH

# Helper functions

virtualenv() {
    python "$BUILDPACK_DIR/vendor/virtualenv-1.7/virtualenv.py" "$@"
}

indent() {
    RE="s/^/       /"
    sed -u "$RE"
}

putsstep () {
    echo "-----> $@"
}

putswarn() {
    echo " !     $@"
}

if test -e $BUILD/bin && ! test -d $BUILD/bin
then
    putswarn 'ERROR: bin exists and is not a directory.'
    exit 1
fi

putsstep "Installing Go $GOVER"
(
    set -e

    # Already cached?
    test -d $CACHE_DIR/go-$GOVER/go && exit

    rm -rf $CACHE_DIR/* # be sure not to BUILD up cruft
    mkdir -p $CACHE_DIR/go-$GOVER
    cd $CACHE_DIR/go-$GOVER
    putsstep "Fetching Go $GOVER"
    curl -sO $GOURL
    tar zxf $GOTOOLCHAIN
    rm -f $GOTOOLCHAIN
)


(
    set -e
    putsstep "Checking for mercurial"
    which hg && exit
    putsstep "Not found. Installing"

    OUT=$(virtualenv --python $PYTHON_EXE --distribute --never-download --prompt='(venv) ' $VENV_LOC 2>&1 || true)
    if [ "$?" -ne 0 ]; then
        putswarn "Python environment corrupted. Rebuilding"
        rm -rf $VENV_LOC/* || true
        OUT=$(virtualenv --python $PYTHON_EXE --distribute --never-download --prompt='(venv) ' $VENV_LOC 2>&1)
    fi
    echo $OUT | indent
    . $VENV_LOC/bin/activate

    putsstep "Setting up mercurial"
    pip install --use-mirrors mercurial | indent
)

putsstep "Removing old binaries"
rm -rf $CACHE_DIR/code/* >/dev/null || true
rm -rf $CACHE_DIR/dependencies/* >/dev/null || true
mkdir -p $CACHE_DIR/code/src $CACHE_DIR/dependencies/src

putsstep "Compiling app"
cd $REPO_DIR
if [ -d "src" ]; then
    # Path where the app will be built
    putsstep 'Found `src` directory. Modifying $GOPATH'
    BUILD_DIR=$REPO_DIR
    export BUILD_DIR=$REPO_DIR
else
    putsstep 'No `src` directory found. Copying code to $GOPATH'
    mkdir -p $REPO_DIR/src
    cp -rv $REPO_DIR/* $CACHE_DIR/code/src/ | indent
    export BUILD_DIR=$CACHE_DIR/code
fi
export GOPATH=$GOPATH:$BUILD_DIR
cd $BUILD_DIR
go get -fix ./...
# This fails if the first branch of the previous if has been taken
# because of trying to move bin to itself.
mv $BUILD_DIR/bin $REPO_DIR/bin 2>/dev/null || true
