#!/bin/bash
# usage: bin/test-compile <build-dir> <cache-dir> <env-dir>

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
env_dir="${3}"
testpack=$(cd "$(dirname $0)/.." && pwd)

echo "true" > "${env_dir}/GO_INSTALL_TOOLS_IN_IMAGE"

if [[ -f "${build}/go.mod" ]]; then
    echo "false" > "${env_dir}/GO_SETUP_GOPATH_IN_IMAGE"
    echo "true" > "${env_dir}/GO_SETUP_GOPATH_FOR_MODULE_CACHE"
else
    echo "true" > "${env_dir}/GO_SETUP_GOPATH_IN_IMAGE"
    echo "false" > "${env_dir}/GO_SETUP_GOPATH_FOR_MODULE_CACHE"
fi

buildpack="${testpack}"
source ${testpack}/bin/compile "${build}" "${cache}" "${env_dir}"

if [ -f "${build}/.golangci.yml" -o -f "${build}/.golangci.toml" -o -f "${build}/.golangci.json" ]; then
    step "/.golangci.{yml,toml,json} detected"
    tmp="$(mktemp -d)"
    mkdir -p "${build}/.heroku/golangci/bin"
    ensureFile "golangci-lint-1.16.0-linux-amd64.tar.gz" "${tmp}" "tar -C ${build}/.heroku/golangci/bin --strip-components=1 -zxf"
fi