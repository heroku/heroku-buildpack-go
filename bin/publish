#!/usr/bin/env bash

set -o pipefail
set -e

BUILDPACK="${1}"
if [ -z "${BUILDPACK}" ]; then
  echo "usage: $0 <build-pack>"
  exit 1
fi

if ! git diff-index --quiet HEAD --; then
  echo "git repository isn't clean"
  exit 1
fi

function errExit {
    echo "${1}"
    exit 1
}

CVER=$(heroku buildpacks:versions heroku/go | head -n 3 | tail -n 1 | awk '{ print $1 }')
echo -e "\nCurrent Version: $CVER"

if [ -z "${CVER}" ]; then
  errExit "Unable to determine the current published version. A buildpack must be manually published once before using this script."
fi

NVER=$(( ${CVER} + 1 ))
echo "Next Version: $NVER"
DATE=$(date "+%Y-%m-%d")
echo "Release Date: ${DATE}"

CHANGES=$(
sed -n "
/## Unreleased/,/## v${CVER}/ {
  /^$/,/^$/ {
    /^$/ d
    p
  }
}" < CHANGELOG.md
)
echo -e "\nCHANGES\n----------\n${CHANGES}\n----------\n"

sed -i '' -e "
/## Unreleased/ a\\
\\
## v${NVER} (${DATE})\

" CHANGELOG.md

echo ""
echo "------------------------------"
PAGER="" git diff -p -- CHANGELOG.md
echo "------------------------------"
echo ""

read -n1 -r -p "If this looks good, press 'y' to continue..." key
echo ""
if [ "${key}" != "y" ]; then
  errExit "aborting"
fi

if [ "${BUILDPACK}" == "heroku/go" ]; then
  git add CHANGELOG.md
  git commit -m "Bump to v${NVER}" -m "${CHANGES}"
  git tag -m "v${NVER}" -m "${CHANGES}" "v${NVER}"
  git push origin master
  git push --tags
fi

echo "Publishing ${BUILDPACK}"
heroku buildpacks:publish "${BUILDPACK}" "v${NVER}"
